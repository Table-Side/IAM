name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch .pem file from secret storage
        run: echo '${{ secrets.AZURE_VM_SSH_KEY }}' > tableside-iam.pem && chmod 600 tableside-iam.pem
      
      - name: Make SSH directory
        run: mkdir -p ~/.ssh && chmod 700 ~/.ssh

      - name: Add host to known hosts
        run: ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts

      - name: Create server directory on VM
        run: ssh -i ./tableside-iam.pem ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} mkdir -p server

      - name: Upload docker-compose.yml to VM
        run: scp -i ./tableside-iam.pem docker-compose.yml ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}:~/server/docker-compose.yml

      - name: Upload `/nginx` directory to VM
        run: scp -i ./tableside-iam.pem -r nginx ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}:~/server/nginx

      - name: Create .env file
        run: |
          echo ' # - Keyloak Postgres - #' >> .env
          echo 'POSTGRES_DB="${{ secrets.POSTGRES_DB }}"' >> .env
          echo 'POSTGRES_USER="${{ secrets.POSTGRES_USER }}"' >> .env
          echo 'POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"' >> .env
          echo ' # - Keyloak - #' >> .env
          echo 'KEYCLOAK_ADMIN="${{ secrets.KEYCLOAK_ADMIN_USERNAME }}"' >> .env
          echo 'KEYCLOAK_ADMIN_PASSWORD="${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}"' >> .env
          echo 'KC_HOSTNAME="${{ vars.SERVER_HOSTNAME }}"' >> .env
          echo 'KC_DB="postgres"' >> .env
          echo 'KC_DB_USERNAME="${{ secrets.POSTGRES_USER }}"' >> .env
          echo 'KC_DB_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"' >> .env
          echo 'KC_DB_URL_DATABASE="${{ secrets.POSTGRES_DB }}"' >>.env
          echo 'KC_DB_URL_HOST="keycloak-postgres"' >> .env
          echo 'KC_DB_URL_PORT="5432"' >> .env
          echo 'KC_HEALTH_ENABLED="true"' >> .env
          echo 'KC_METRICS_ENABLED="true"' >> .env
          echo 'KC_PROXY_HEADERS="xforwarded"' >> .env
          echo 'PROXY_ADDRESS_FORWARDING="true"' >> .env
          echo ' # - Let's Encrypt SSL - #' >> .env
          echo 'KEYCLOAK_HOST="keycloak"' >> .env
          echo 'KEYCLOAK_PORT="8080"' >> .env
          echo 'KEYCLOAK_DOMAIN=${KC_HOSTNAME}' >> .env
          echo 'LE_EMAIL="gg00528@surrey.ac.uk"' >> .env
          echo 'LE_OPTIONS="--keep-until-expiring"' >> .env
          echo 'LE_RENEW_OPTIONS="--dry-run --no-self-upgrade --post-hook 'nginx -s reload'"' >> .env
          echo 'LE_RENEW_CRON_COMMAND="echo 'Dummy cron command'"' >> .env

      - name: Upload .env file to VM
        run: scp -i ./tableside-iam.pem .env ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}:~/server/.env

      - name: Stop docker compose instance on VM (if currently running)
        run: ssh -i ./tableside-iam.pem ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} sudo docker compose -f server/docker-compose.yml down

      - name: Build and Run docker compose on VM
        run: ssh -i ./tableside-iam.pem ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} sudo docker compose -f server/docker-compose.yml up -d
